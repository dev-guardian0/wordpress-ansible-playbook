---
- name: Add Nginx repo
  apt_repository:
    repo: ppa:nginx/development

- name: Install Nginx
  apt:
    name: nginx
    state: present
    force: yes
    update_cache: yes

- name: Check Nginx configs exist
  stat: path=/etc/nginx/.git
  register: git_exists

- name: Remove default Nginx configs
  file:
    path: /etc/nginx
    state: absent
  when: not git_exists.stat.exists

- name: Clone Nginx configs
  git:
    repo: "{{ nginx_config_repo }}"
    dest: /etc/nginx
    version: "{{ nginx_config_repo_version }}"
    force: yes
  when: not git_exists.stat.exists

- name: Set Nginx user
  lineinfile:
    dest: /etc/nginx/nginx.conf
    regexp: "^user"
    line: "user {{ remote_web_user }};"
    state: present
  notify: restart nginx

- name: Copy ssl.com configuration to new domain based configuration.
  copy:
    src: /etc/nginx/sites-available/ssl.com
    dest: "/etc/nginx/sites-available/{{ domain }}.conf"
    force: no

- name: Remove www redirect in staging configuration
  replace:
    path: "/etc/nginx/sites-available/{{ domain }}.conf"
    regexp: '# Redirect www to non-www[\s\w\d\W]+'
    replace: ''
  when: domain == staging_domain

- name: Remove www domain from server name item in staging conf
  replace:
    path: "/etc/nginx/sites-available/{{ staging_domain }}.conf"
    regexp: 'www\.ssl\.com'
    replace: ''
  when: domain == staging_domain

- name: Replace ssl.com in configuration files with the relevant domain
  replace:
    path: "/etc/nginx/sites-available/{{ domain }}.conf"
    regexp: 'sss\.com'
    replace: '{{ domain }}'

- name: Modify root path directive configuration.
  lineinfile:
    dest: "/etc/nginx/sites-available/{{ domain }}.conf"
    regexp: "^root"
    line: "root /home/{{ remote_web_user }}/www/{{ domain }};"
    state: present

- name: Modify access_log path directive for configuration.
  lineinfile:
    dest: "/etc/nginx/sites-available/{{ domain }}.conf"
    regexp: "access_log"
    line: "access_log /home/{{ remote_web_user }}/www/{{ domain }}/logs/access.log;"
    state: present

- name: Modify error_log path directive for all domain
  lineinfile:
    dest: "/etc/nginx/sites-available/{{ domain }}.conf"
    regexp: "error_log"
    line: "error_log /home/{{ remote_web_user }}/www/{{ domain }}/logs/error.log;"
    state: present

- name: Generate dhparams
  shell: openssl dhparam -out /etc/ssl/dhparams.pem 2048
  args:
    creates: /etc/ssl/dhparams.pem

- name: Uncomment ssl_dhparam line in configuration
  lineinfile:
    dest: /etc/nginx/global/server/ssl.conf
    regexp: "^# ssl_dhparam"
    line: "ssl_dhparam /etc/ssl/dhparams.pem;"
    state: present

- name: Symlink default catchall
  file:
    src: "/etc/nginx/sites-available/default"
    dest: "/etc/nginx/sites-enabled/default"
    state: link

- name: Symlink domain
  file:
    src: "/etc/nginx/sites-available/{{ domain }}"
    dest: "/etc/nginx/sites-enabled/{{ domain }}"
    state: link
  notify: restart nginx
